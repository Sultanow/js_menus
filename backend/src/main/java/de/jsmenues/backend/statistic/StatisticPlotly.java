package de.jsmenues.backend.statistic;

import java.util.List;
import java.util.Objects;

/**
 * This class is used to send Data to the frontend.
 *
 * Property Getter and Setter autogenerated.
 * Equals & hashCode autogenerated.
 */
class StatisticPlotly {
    private String updateTime;
    private String title;
    private List<Object> traces;
    private Object layout;
    private List<Object> nextTrace;
    private List<Object> prevTrace;
    private String startDate;
    private String prevDate;
    private String prevEndDate;
    private String nextDate;
    private String nextEndDate;
    private String endDate;

    public String getEndDate() {
        return endDate;
    }

    public void setEndDate(String endDate) {
        this.endDate = endDate;
    }

    public String getPrevDate() {
        return prevDate;
    }

    public void setPrevDate(String prevDate) {
        this.prevDate = prevDate;
    }

    public String getNextDate() {
        return nextDate;
    }

    public void setNextDate(String nextDate) {
        this.nextDate = nextDate;
    }

    public String getStartDate() {
        return startDate;
    }

    public void setStartDate(String startDate) {
        this.startDate = startDate;
    }

    public void setNextTrace(List<Object> nextTrace) {
        this.nextTrace = nextTrace;
    }

    public void setPrevTrace(List<Object> prevTrace) {
        this.prevTrace = prevTrace;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public List<Object> getTraces() {
        return traces;
    }

    public void setTraces(List<Object> traces) {
        this.traces = traces;
    }

    public Object getLayout() {
        return layout;
    }

    public void setLayout(Object layout) {
        this.layout = layout;
    }

    public String getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }

    public List<Object> getNextTrace() {
        return nextTrace;
    }

    public List<Object> getPrevTrace() {
        return prevTrace;
    }

    public String getPrevEndDate() {
        return prevEndDate;
    }

    public void setPrevEndDate(String prevEndDate) {
        this.prevEndDate = prevEndDate;
    }

    public String getNextEndDate() {
        return nextEndDate;
    }

    public void setNextEndDate(String nextEndDate) {
        this.nextEndDate = nextEndDate;
    }

    @Override
    public String toString() {
        return "StatisticPlotly{" +
                "updateTime='" + updateTime + '\'' +
                ", title='" + title + '\'' +
                ", traces=" + traces +
                ", layout=" + layout +
                ", nextTrace=" + nextTrace +
                ", prevTrace=" + prevTrace +
                ", startDate='" + startDate + '\'' +
                ", prevDate='" + prevDate + '\'' +
                ", prevEndDate='" + prevEndDate + '\'' +
                ", nextDate='" + nextDate + '\'' +
                ", nextEndDate='" + nextEndDate + '\'' +
                ", endDate='" + endDate + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        StatisticPlotly plotly = (StatisticPlotly) o;
        return Objects.equals(updateTime, plotly.updateTime) &&
                Objects.equals(title, plotly.title) &&
                Objects.equals(traces, plotly.traces) &&
                Objects.equals(layout, plotly.layout) &&
                Objects.equals(nextTrace, plotly.nextTrace) &&
                Objects.equals(prevTrace, plotly.prevTrace) &&
                Objects.equals(startDate, plotly.startDate) &&
                Objects.equals(prevDate, plotly.prevDate) &&
                Objects.equals(prevEndDate, plotly.prevEndDate) &&
                Objects.equals(nextDate, plotly.nextDate) &&
                Objects.equals(nextEndDate, plotly.nextEndDate) &&
                Objects.equals(endDate, plotly.endDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(updateTime, title, traces, layout, nextTrace, prevTrace, startDate, prevDate, prevEndDate, nextDate, nextEndDate, endDate);
    }

}
