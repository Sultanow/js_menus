version: '3.7'
services:
  redis:
    image: redis:6.0.6
    command: /home/redis.conf 
    volumes:
      - ./redis/conf:/home
      - ./redis/data:/data
    container_name: redis-service
    networks:
      - cockpit-net 
    labels:
      - "traefik.enable=false"

  payara:
    image: payara/server-full:5.2020.3-jdk11
    volumes:
      - ./../target/autodeploy:/opt/payara/appserver/glassfish/domains/production/autodeploy
      - ./payara/config/:/opt/payara/deployments/
    container_name: payara-service
    environment: 
      - POSTBOOT_COMMANDS=/opt/payara/deployments/commands.asadmin
    ports:
      - "4848:4848"
      - "8080:8080"
    links: 
      - redis
    networks: 
      - cockpit-net
    labels:
      - "traefik.enable=false"
  
  traefik:
    image: traefik:v2.3
    container_name: traefik-service
    command: 
      - "--api.insecure=true"
      - "--log.level=DEBUG"
      - "--entrypoints.python.address=:81"
      - "--providers.docker.network=cockpit-net"
      - --accesslog=true
      - --accesslog.filepath=/var/log/access.log
    labels:
      - "traefik.enable=true"
    networks: 
      - cockpit-net
    ports:
      # The Web UI (enabled by --api.insecure=true)
      - "8082:8080"
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './traefik/logs/:/var/log/'
 
  python:
    image: gunicorn-flask
    build:
      context: ./python
      dockerfile: Dockerfile-gunicorn-flask
    volumes:
      - "./python/app-data/:/app/scripts"
    networks:
      - cockpit-net
    labels:
      - "traefik.http.routers.python_router.rule=Method(`POST`) && Path(`/update`, `/save`)"
      - "traefik.http.routers.python_router.entrypoints=python"
      - "traefik.port=5000"
      - "traefik.enable=true"
      - "traefik.http.services.python.loadbalancer.server.port=5000"

networks:
  cockpit-net:
    name: cockpit-net
